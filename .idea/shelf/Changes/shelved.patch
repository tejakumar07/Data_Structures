Index: Binary Search/BS on Answers/Median_Of_Two_Sorted_Arrays_Of_Different_Sizes/01-main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Binary Search/BS on Answers/Median_Of_Two_Sorted_Arrays_Of_Different_Sizes/01-main.py b/Binary Search/BS on Answers/Median_Of_Two_Sorted_Arrays_Of_Different_Sizes/01-main.py
--- a/Binary Search/BS on Answers/Median_Of_Two_Sorted_Arrays_Of_Different_Sizes/01-main.py	(revision ce61753870695af6152700bb72663c3562121831)
+++ b/Binary Search/BS on Answers/Median_Of_Two_Sorted_Arrays_Of_Different_Sizes/01-main.py	(date 1753852252225)
@@ -1,0 +1,34 @@
+# Brute Force Approach
+
+def medianOfTwoSortedArrays(nums1, nums2):
+    n1 = len(nums1)
+    n2 = len(nums2)
+    n = n1 + n2
+    arr = []
+    i = j = 0
+    
+    while i < n1 and j < n2:
+        if nums1[i] <= nums2[j]:
+            arr.append(nums1[i])
+            i += 1
+        else:
+            arr.append(nums2[j])
+            j += 1
+    while i < n1:
+        arr.append(nums1[i])
+        i += 1
+    while j < n1:
+        arr.append(nums2[j])
+        j += 1
+    
+    if n % 2 == 1:
+        return float(arr[n // 2])
+    
+    else:
+        return (arr[n // 2] + arr[(n // 2) - 1]) / 2.0
+
+if __name__ == "__main__":
+    nums1 = [1, 2]
+    nums2 = [3, 4]
+    ans = medianOfTwoSortedArrays(nums1, nums2)
+    print(ans)
\ No newline at end of file
